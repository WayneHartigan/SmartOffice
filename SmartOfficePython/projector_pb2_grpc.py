# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import projector_pb2 as projector__pb2


class ProjectorServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.switchPower = channel.unary_unary(
        '/projector.ProjectorService/switchPower',
        request_serializer=projector__pb2.PowerRequest.SerializeToString,
        response_deserializer=projector__pb2.PowerResponse.FromString,
        )
    self.changeInput = channel.unary_unary(
        '/projector.ProjectorService/changeInput',
        request_serializer=projector__pb2.InputRequest.SerializeToString,
        response_deserializer=projector__pb2.InputResponse.FromString,
        )


class ProjectorServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def switchPower(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def changeInput(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ProjectorServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'switchPower': grpc.unary_unary_rpc_method_handler(
          servicer.switchPower,
          request_deserializer=projector__pb2.PowerRequest.FromString,
          response_serializer=projector__pb2.PowerResponse.SerializeToString,
      ),
      'changeInput': grpc.unary_unary_rpc_method_handler(
          servicer.changeInput,
          request_deserializer=projector__pb2.InputRequest.FromString,
          response_serializer=projector__pb2.InputResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'projector.ProjectorService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
